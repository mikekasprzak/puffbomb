# - -------------------------------------------------------------------------------------------- - #
TARGET			:=	Spider
TARGET_DIR		:=	output
TARGET_EXE		:=	$(TARGET_DIR)/$(TARGET).exe
LOG_LEVEL		:=	0

PLATFORM		:=	SDL
# - -------------------------------------------------------------------------------------------- - #

# - -------------------------------------------------------------------------------------------- - #
TreeTool		:=	Tools/TreeTool
# - -------------------------------------------------------------------------------------------- - #
INCLUDES		:=	src Code/Library Code/External Code Platform/$(PLATFORM) /usr/local/include
DEFINES			:=	LOG_LEVEL=$(LOG_LEVEL) EDITOR
LIBS			:=	-Lmingw32/lib -lmingw32 -lSDLmain -lSDL -lSDL_image -lSDL_ttf \
					-lkernel32 -luser32 -lgdi32 -lcomdlg32 -lole32 -ldinput \
					-lddraw -ldxguid -lwinmm -ldsound -lopengl32 -lglu32 
#					-mwindows
# - -------------------------------------------------------------------------------------------- - #
.CPP_FLAGS		:=	-O2 -W -Wall -Wno-unused-variable
.CPP_FILES		:=	$(shell $(TreeTool) src .cpp .c) $(shell $(TreeTool) Platform/$(PLATFORM) .cpp) \
					$(shell $(TreeTool) Code/External .cpp .c) $(shell $(TreeTool) Code/Game .cpp .c) \
					$(shell $(TreeTool) Code/Library .cpp .c) $(shell $(TreeTool) Code/Editor .cpp .c) \
					$(shell $(TreeTool) Code/Engine2D .cpp .c)
# - -------------------------------------------------------------------------------------------- - #
#.H_FLAGS		:=	
#.H_FILES		:=	$(shell $(TreeTool) src .h)
# - -------------------------------------------------------------------------------------------- - #
# Transformations #
INCLUDES		:=	$(addprefix -I ,$(INCLUDES))
DEFINES			:=	$(addprefix -D,$(DEFINES))
.CPP_FLAGS		:=	$(.CPP_FLAGS) $(DEFINES)
#.H_FLAGS		:=	$(.H_FLAGS) $(DEFINES)
# - -------------------------------------------------------------------------------------------- - #
.O_FILES		:=	$(addsuffix .o,$(addprefix output/obj/,$(.CPP_FILES)))
#.GCH_FILES		:=	$(addsuffix .gch,$(addprefix output/obj/,$(.H_FILES)))
# - -------------------------------------------------------------------------------------------- - #

# - -------------------------------------------------------------------------------------------- - #
RUN				:=	sh tools/run
# - -------------------------------------------------------------------------------------------- - #
#ifndef GCC
#GCC			:=	tools/distcc $(RUN) g++
#else
GCC				:=	g++
#endif
# - -------------------------------------------------------------------------------------------- - #


# - -------------------------------------------------------------------------------------------- - #
$(TARGET_EXE): output/makedirs makefile $(.O_FILES)
	mkdir -p $(dir $(TARGET_EXE))
	g++ $(INCLUDES) -L /usr/local/lib $(.CPP_FLAGS) $(.O_FILES) $(LIBS) -o $@
# - -------------------------------------------------------------------------------------------- - #

# - -------------------------------------------------------------------------------------------- - #
all: makedirs $(TARGET_EXE)
# - -------------------------------------------------------------------------------------------- - #

# - -------------------------------------------------------------------------------------------- - #
run: $(TARGET_EXE)
	$(RUN) $(TARGET_EXE)
# - -------------------------------------------------------------------------------------------- - #
clean: 
	rm -fr output
# - -------------------------------------------------------------------------------------------- - #

# - -------------------------------------------------------------------------------------------- - #
makedirs:
	mkdir -p $(dir $(.O_FILES))
# - -------------------------------------------------------------------------------------------- - #
output/makedirs:
	mkdir -p $(dir $(.O_FILES))
	touch output/makedirs
# - -------------------------------------------------------------------------------------------- - #

# - -------------------------------------------------------------------------------------------- - #
#output/obj/%.h.gch: %.h
#	$(GCC) $(INCLUDES) $(.H_FLAGS) -MMD -MF $@.d -c $< -o $@ 
# - -------------------------------------------------------------------------------------------- - #
output/obj/%.cpp.o: %.cpp
	$(GCC) $(INCLUDES) $(.CPP_FLAGS) -MMD -MF $@.d -c $< -o $@ 
# - -------------------------------------------------------------------------------------------- - #
output/obj/%.c.o: %.c
	gcc $(INCLUDES) $(.CPP_FLAGS) -MMD -MF $@.d -c $< -o $@ 
# - -------------------------------------------------------------------------------------------- - #



# - -------------------------------------------------------------------------------------------- - #
-include $(.O_FILES:.o=.o.d)
#-include $(.GCH_FILES:.o=.o.d)
# - -------------------------------------------------------------------------------------------- - #
